apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "bpdm.fullname" . }}
  labels:
    {{- include "bpdm.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "bpdm.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "bpdm.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      # @url: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server
      automountServiceAccountToken: false
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: {{ .Values.springProfiles | join ","  }}
            - name: SPRING_CONFIG_IMPORT
              value: /etc/conf/external.properties
            - name: BPDM_DB_HOST
              value: {{ .Values.postgres.auth.host }}
            - name: BPDM_OPENSEARCH_HOST
              value: {{ .Values.opensearch.host }}
            - name: BPDM_KEYCLOAK_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "bpdm.applicationSecret.name" . }}
                  key: keycloak-secret
            - name: BPDM_CDQ_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "bpdm.applicationSecret.name" . }}
                  key: cdq-key
            - name: BPDM_DB_USER
              value: {{ .Values.postgres.auth.username }}
            - name: BPDM_DB_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ include "bpdm.applicationSecret.name" . }}
                  key: postgres-password
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          # @url: https://cloud.google.com/blog/products/containers-kubernetes/kubernetes-best-practices-setting-up-health-checks-with-readiness-and-liveness-probes
          livenessProbe:
            httpGet:
              path: "/actuator/health/readiness"
              port: 8080
              scheme: HTTP
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          # @url: https://cloud.google.com/blog/products/containers-kubernetes/kubernetes-best-practices-setting-up-health-checks-with-readiness-and-liveness-probes
          readinessProbe:
            httpGet:
              path: "/actuator/health/readiness"
              port: 8080
              scheme: HTTP
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /etc/conf
              name: config
              readOnly: true
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "bpdm.fullname" . }}